local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- 2. Pegas aquÃ­ el sistema de claves personalizado
local validKeys = {
    "DarkHub29568294"
}

local userKey = ""

local function showKeyPrompt()
    Rayfield:Prompt({
        Title = "Dark Hub - Key System",
        SubTitle = "ðŸ”’ Enter your key to continue",
        Note = "Click the button below to get the key",
        InputPlaceholder = "Enter key here",
        Buttons = {
            {
                Name = "ðŸ”‘ Get Key",
                Callback = function()
                    setclipboard("https://loot-link.com/s?dmcdRJCo")
                    Rayfield:Notify({
                        Title = "Key Link Copied",
                        Content = "Paste it into your browser to get the key.",
                        Duration = 5
                    })
                end
            },
            {
                Name = "âœ… Submit",
                Callback = function(input)
                    if table.find(validKeys, input) then
                        userKey = input
                        Rayfield:Notify({
                            Title = "Access Granted",
                            Content = "Correct key, loading script...",
                            Duration = 3
                        })
                        return true
                    else
                        Rayfield:Notify({
                            Title = "Incorrect Key",
                            Content = "Try again or get a valid key.",
                            Duration = 3
                        })
                        return false
                    end
                end
            }
        }
    })
end

showKeyPrompt()

-- Crear pestaÃ±as
local EspTab = Window:CreateTab("ðŸ§¿ ESP", 4483362458)
local AimbotTab = Window:CreateTab("ðŸŽ¯ Aimbot", 4483362458)

-- Variables lÃ³gicas
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local espEnabled = true
local aimbotEnabled = false
local ignoreTeammates = false
local aimbotKey = Enum.UserInputType.MouseButton2
local aimbotHold = false
local smoothing = 0.15
local fovRadius = 100

local highlighted = {}
local fovCircle = Drawing.new("Circle")
fovCircle.Color = Color3.fromRGB(255, 0, 0)
fovCircle.Thickness = 1
fovCircle.Radius = fovRadius
fovCircle.NumSides = 64
fovCircle.Transparency = 1
fovCircle.Visible = false
fovCircle.Filled = false


-- ESP
local function isVisible(character)
    if not character or not character:FindFirstChild("Head") then return false end
    local origin = Camera.CFrame.Position
    local direction = (character.Head.Position - origin)
    local params = RaycastParams.new()
    params.FilterDescendantsInstances = {LocalPlayer.Character}
    params.FilterType = Enum.RaycastFilterType.Blacklist
    local result = workspace:Raycast(origin, direction, params)
    return (not result or result.Instance:IsDescendantOf(character))
end

local function updateHighlightColors()
    for character, hl in pairs(highlighted) do
        if character and hl and character:FindFirstChild("Head") then
            hl.OutlineColor = isVisible(character) and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        end
    end
end

local function addHighlight(character)
    if highlighted[character] or not espEnabled then return end
    local player = Players:GetPlayerFromCharacter(character)
    if not player or (ignoreTeammates and player.Team == LocalPlayer.Team) then return end

    local hl = Instance.new("Highlight")
    hl.Name = "ClientHighlight"
    hl.Adornee = character
    hl.FillTransparency = 1
    hl.OutlineTransparency = 0
    hl.Parent = character
    highlighted[character] = hl
end

local function removeHighlight(character)
    local hl = highlighted[character]
    if hl then
        hl:Destroy()
        highlighted[character] = nil
    end
end

local function refreshESP()
    for char in pairs(highlighted) do
        removeHighlight(char)
    end
    if not espEnabled then return end
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer and p.Character then
            addHighlight(p.Character)
        end
    end
end

Players.PlayerAdded:Connect(function(p)
    p.CharacterAdded:Connect(function(char)
        task.wait(1)
        if espEnabled then
            addHighlight(char)
        end
    end)
end)

for _, player in ipairs(Players:GetPlayers()) do
    if player ~= LocalPlayer and player.Character then
        addHighlight(player.Character)
    end
end


-- Aimbot
local function getClosestTarget()
    local closest = nil
    local shortest = math.huge
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
            if not ignoreTeammates or player.Team ~= LocalPlayer.Team then
                local head = player.Character.Head
                local screenPoint, onScreen = Camera:WorldToViewportPoint(head.Position)
                if onScreen and isVisible(player.Character) then
                    local mousePos = UserInputService:GetMouseLocation()
                    local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - Vector2.new(mousePos.X, mousePos.Y)).Magnitude
                    if distance < fovRadius and distance < shortest then
                        closest = head
                        shortest = distance
                    end
                end
            end
        end
    end
    return closest
end

local function aimAtTarget(target)
    if not target then return end
    local screenPoint = Camera:WorldToViewportPoint(target.Position)
    local mousePos = UserInputService:GetMouseLocation()
    local aimPos = Vector2.new(screenPoint.X, screenPoint.Y)
    local move = (aimPos - Vector2.new(mousePos.X, mousePos.Y)) * (1 - smoothing)
    mousemoverel(move.X, move.Y)
end


-- UI Elements
EspTab:CreateToggle({
   Name = "Enable ESP",
   CurrentValue = espEnabled,
   Callback = function(val)
       espEnabled = val
       refreshESP()
   end,
})

EspTab:CreateToggle({
   Name = "Ignore Teammates",
   CurrentValue = ignoreTeammates,
   Callback = function(val)
       ignoreTeammates = val
       refreshESP()
   end,
})

AimbotTab:CreateToggle({
   Name = "Enable Aimbot",
   CurrentValue = aimbotEnabled,
   Callback = function(val)
       aimbotEnabled = val
       fovCircle.Visible = val
   end,
})

AimbotTab:CreateSlider({
    Name = "TamaÃ±o del FOV",
    Range = {50, 500},
    Increment = 10,
    Suffix = "px",
    CurrentValue = 100,
    Flag = "FOVRadius",
    Callback = function(v)
        fovRadius = v
        fovCircle.Radius = v
    end
})

AimbotTab:CreateSlider({
    Name = "Suavizado",
    Range = {0.01, 1},
    Increment = 0.01,
    CurrentValue = 0.15,
    Flag = "Smooth",
    Callback = function(v)
        smoothing = v
    end
})

-- Input
local lastColorUpdate = 0
local colorUpdateInterval = 0.05

UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    if input.UserInputType == aimbotKey then
        aimbotHold = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == aimbotKey then
        aimbotHold = false
    end
end)

RunService.RenderStepped:Connect(function(dt)
    if espEnabled then
        lastColorUpdate += dt
        if lastColorUpdate >= colorUpdateInterval then
            lastColorUpdate = 0
            updateHighlightColors()
        end
    end

    if aimbotEnabled and aimbotHold then
        local target = getClosestTarget()
        aimAtTarget(target)
    end

    local vp = Camera.ViewportSize
    fovCircle.Position = Vector2.new(vp.X / 2, vp.Y / 2)
end)
